devtools::use_package("dtw")
devtools::use_package("changepoint")
devtools::use_package("gplots")
devtools::use_package("ROCR")
load("~/Desktop/magpat_ex.rda")
load("~/Desktop/shape_ex.rda")
load("~/Desktop/mutmap.rda")
classify_default=mutmap
devtools::use_data(magpat_ex, overwrite=T)
devtools::use_data(shape_ex, overwrite=T)
devtools::use_data(mutmap, overwrite=T)
devtools::use_data(classify_default, internal=T, overwrite=T)
install("~/Documents/SVN_dir/classsnitch/pkg/classSNitch")
rf = classifyRNA(classes=2)
#install package
setwd("~/Desktop")
library("devtools")
#devtools::install_github("klutometis/roxygen")
library(roxygen2)
#create("classSNitch")
setwd("~/Documents/SVN_dir/classsnitch/pkg/classSNitch")
document()
devtools::use_package("randomForest")
devtools::use_package("dtw")
devtools::use_package("changepoint")
devtools::use_package("gplots")
devtools::use_package("ROCR")
load("~/Desktop/magpat_ex.rda")
load("~/Desktop/shape_ex.rda")
load("~/Desktop/mutmap.rda")
classify_default=mutmap
devtools::use_data(magpat_ex, overwrite=T)
devtools::use_data(shape_ex, overwrite=T)
devtools::use_data(mutmap, overwrite=T)
devtools::use_data(classify_default, internal=T, overwrite=T)
install("~/Documents/SVN_dir/classsnitch/pkg/classSNitch")
#initialize variables
setwd("~/Desktop/final")
files = list.files("~/Desktop/final/")
varna_start=c(0,19,19,0,7,0,9,9,9,0,0,0,15,13,6,6)+1
params = NULL
#get change parameters
for(x in 1:length(files)){
sample = read.table(files[x])
samp = as.matrix(sample[,3:ncol(sample)])
rownames(samp) = paste0(files[x],paste(substr(x, 1, nchar(x)-4), sample[,1], sep="_"))
mut = sample[2:nrow(samp),2]-sample[2,2]+varna_start[x]
params = rbind(params, getChangeParams(samp[2:nrow(samp),], point=mut, window=5, base=samp[1,], trim=5))
}
rf = classifyRNA(classes=2)
rf_pred = predict(rf, params)[[1]]
sum(rf_pred==0)/length(rf_pred)
rf = classifyRNA(classes=3)
rf_pred2 = predict(rf, params)[[1]]
sum(rf_pred2==1)/length(rf_pred2)
#install package
setwd("~/Desktop")
library("devtools")
#devtools::install_github("klutometis/roxygen")
library(roxygen2)
#create("classSNitch")
setwd("~/Documents/SVN_dir/classsnitch/pkg/classSNitch")
document()
devtools::use_package("randomForest")
devtools::use_package("dtw")
devtools::use_package("changepoint")
devtools::use_package("gplots")
devtools::use_package("ROCR")
load("~/Desktop/magpat_ex.rda")
load("~/Desktop/shape_ex.rda")
load("~/Desktop/mutmap.rda")
classify_default=mutmap
devtools::use_data(magpat_ex, overwrite=T)
devtools::use_data(shape_ex, overwrite=T)
devtools::use_data(mutmap, overwrite=T)
devtools::use_data(classify_default, internal=T, overwrite=T)
install("~/Documents/SVN_dir/classsnitch/pkg/classSNitch")
#install package
setwd("~/Desktop")
library("devtools")
#devtools::install_github("klutometis/roxygen")
library(roxygen2)
#create("classSNitch")
setwd("~/Documents/SVN_dir/classsnitch/pkg/classSNitch")
document()
devtools::use_package("randomForest")
devtools::use_package("dtw")
devtools::use_package("changepoint")
devtools::use_package("gplots")
devtools::use_package("ROCR")
load("~/Desktop/magpat_ex.rda")
load("~/Desktop/shape_ex.rda")
load("~/Desktop/mutmap.rda")
classify_default=mutmap
devtools::use_data(magpat_ex, overwrite=T)
devtools::use_data(shape_ex, overwrite=T)
devtools::use_data(mutmap, overwrite=T)
devtools::use_data(classify_default, internal=T, overwrite=T)
install("~/Documents/SVN_dir/classsnitch/pkg/classSNitch")
#initialize variables
setwd("~/Desktop/final")
files = list.files("~/Desktop/final/")
varna_start=c(0,19,19,0,7,0,9,9,9,0,0,0,15,13,6,6)+1
params = NULL
#get change parameters
for(x in 1:length(files)){
sample = read.table(files[x])
samp = as.matrix(sample[,3:ncol(sample)])
rownames(samp) = paste0(files[x],paste(substr(x, 1, nchar(x)-4), sample[,1], sep="_"))
mut = sample[2:nrow(samp),2]-sample[2,2]+varna_start[x]
params = rbind(params, getChangeParams(samp[2:nrow(samp),], point=mut, window=5, base=samp[1,], trim=5))
}
#install package
setwd("~/Desktop")
library("devtools")
#devtools::install_github("klutometis/roxygen")
library(roxygen2)
#create("classSNitch")
setwd("~/Documents/SVN_dir/classsnitch/pkg/classSNitch")
document()
devtools::use_package("randomForest")
devtools::use_package("dtw")
devtools::use_package("changepoint")
devtools::use_package("gplots")
devtools::use_package("ROCR")
load("~/Desktop/magpat_ex.rda")
load("~/Desktop/shape_ex.rda")
load("~/Desktop/mutmap.rda")
classify_default=mutmap
devtools::use_data(magpat_ex, overwrite=T)
devtools::use_data(shape_ex, overwrite=T)
devtools::use_data(mutmap, overwrite=T)
devtools::use_data(classify_default, internal=T, overwrite=T)
install("~/Documents/SVN_dir/classsnitch/pkg/classSNitch")
#initialize variables
setwd("~/Desktop/final")
files = list.files("~/Desktop/final/")
varna_start=c(0,19,19,0,7,0,9,9,9,0,0,0,15,13,6,6)+1
params = NULL
#get change parameters
for(x in 1:length(files)){
sample = read.table(files[x])
samp = as.matrix(sample[,3:ncol(sample)])
rownames(samp) = paste0(files[x],paste(substr(x, 1, nchar(x)-4), sample[,1], sep="_"))
mut = sample[2:nrow(samp),2]-sample[2,2]+varna_start[x]
params = rbind(params, getChangeParams(samp[2:nrow(samp),], point=mut, window=5, base=samp[1,], trim=5))
}
rf = classifyRNA(classes=2)
rf_pred = predict(rf, params)[[1]]
sum(rf_pred==0)/length(rf_pred)
library("gplots")
library("ROCR")
setwd("~/Desktop/lab/classify/RMDB_SHP/")
#roc curves
col = 2
rf = classifyRNA(classes=col)
data("mutmap")
data = mutmap
data = data[-which(is.na(data[,col]),arr.ind=T),]
predobj = prediction(rf$votes[,2], data[,col])
perfobj = performance(predobj, 'tpr', 'fpr')
aucobj = performance(predobj, 'auc')
plot(perfobj@x.values[[1]], perfobj@y.values[[1]], lwd=2,
type="l", xaxt="n", yaxt="n", xlab="", ylab="")
axis(side=2, tck=-0.05, at=c(0.2,0.6,1), labels=c("","",""))
axis(side=1, tck=-0.05, at=c(0.2,0.6,1), labels=c("","",""))
points(c(-1,2),c(-1,2), col="red", type="l")
text(0.8, 0.2, paste("AUC: ", format(aucobj@y.values, digits=2), sep=""), cex=1)
#install package
setwd("~/Desktop")
library("devtools")
#devtools::install_github("klutometis/roxygen")
library(roxygen2)
#create("classSNitch")
setwd("~/Documents/SVN_dir/classsnitch/pkg/classSNitch")
document()
devtools::use_package("randomForest")
devtools::use_package("dtw")
devtools::use_package("changepoint")
devtools::use_package("gplots")
devtools::use_package("ROCR")
load("~/Desktop/magpat_ex.rda")
load("~/Desktop/shape_ex.rda")
load("~/Desktop/mutmap.rda")
classify_default=mutmap
devtools::use_data(magpat_ex, overwrite=T)
devtools::use_data(shape_ex, overwrite=T)
devtools::use_data(mutmap, overwrite=T)
devtools::use_data(classify_default, internal=T, overwrite=T)
install("~/Documents/SVN_dir/classsnitch/pkg/classSNitch")
library("gplots")
library("ROCR")
setwd("~/Desktop/lab/classify/RMDB_SHP/")
#roc curves
col = 2
rf = classifyRNA(classes=col)
data("mutmap")
data = mutmap
data = data[-which(is.na(data[,col]),arr.ind=T),]
predobj = prediction(rf$votes[,2], data[,col])
perfobj = performance(predobj, 'tpr', 'fpr')
aucobj = performance(predobj, 'auc')
plot(perfobj@x.values[[1]], perfobj@y.values[[1]], lwd=2,
type="l", xaxt="n", yaxt="n", xlab="", ylab="")
axis(side=2, tck=-0.05, at=c(0.2,0.6,1), labels=c("","",""))
axis(side=1, tck=-0.05, at=c(0.2,0.6,1), labels=c("","",""))
points(c(-1,2),c(-1,2), col="red", type="l")
text(0.8, 0.2, paste("AUC: ", format(aucobj@y.values, digits=2), sep=""), cex=1)
setwd("~/Desktop/final")
files = list.files("~/Desktop/final/")
varna_start=c(0,19,19,0,7,0,9,9,9,0,0,0,15,13,6,6)+1
params = NULL
#get change parameters
for(x in 1:length(files)){
sample = read.table(files[x])
samp = as.matrix(sample[,3:ncol(sample)])
rownames(samp) = paste0(files[x],paste(substr(x, 1, nchar(x)-4), sample[,1], sep="_"))
mut = sample[2:nrow(samp),2]-sample[2,2]+varna_start[x]
params = rbind(params, getChangeParams(samp[2:nrow(samp),], point=mut, window=5, base=samp[1,], trim=5))
}
#install package
setwd("~/Desktop")
library("devtools")
#devtools::install_github("klutometis/roxygen")
library(roxygen2)
#create("classSNitch")
setwd("~/Documents/SVN_dir/classsnitch/pkg/classSNitch")
document()
devtools::use_package("randomForest")
devtools::use_package("dtw")
devtools::use_package("changepoint")
devtools::use_package("gplots")
devtools::use_package("ROCR")
load("~/Desktop/magpat_ex.rda")
load("~/Desktop/shape_ex.rda")
load("~/Desktop/mutmap.rda")
classify_default=mutmap
devtools::use_data(magpat_ex, overwrite=T)
devtools::use_data(shape_ex, overwrite=T)
devtools::use_data(mutmap, overwrite=T)
devtools::use_data(classify_default, internal=T, overwrite=T)
install("~/Documents/SVN_dir/classsnitch/pkg/classSNitch")
#get change parameters
for(x in 1:length(files)){
sample = read.table(files[x])
samp = as.matrix(sample[,3:ncol(sample)])
rownames(samp) = paste0(files[x],paste(substr(x, 1, nchar(x)-4), sample[,1], sep="_"))
mut = sample[2:nrow(samp),2]-sample[2,2]+varna_start[x]
params = rbind(params, getChangeParams(samp[2:nrow(samp),], point=mut, window=5, base=samp[1,], trim=5))
}
#initialize variables
setwd("~/Desktop/final")
files = list.files("~/Desktop/final/")
varna_start=c(0,19,19,0,7,0,9,9,9,0,0,0,15,13,6,6)+1
params = NULL
#get change parameters
for(x in 1:length(files)){
sample = read.table(files[x])
samp = as.matrix(sample[,3:ncol(sample)])
rownames(samp) = paste0(files[x],paste(substr(x, 1, nchar(x)-4), sample[,1], sep="_"))
mut = sample[2:nrow(samp),2]-sample[2,2]+varna_start[x]
params = rbind(params, getChangeParams(samp[2:nrow(samp),], point=mut, window=5, base=samp[1,], trim=5))
}
rf = classifyRNA(classes=2)
rf_pred = predict(rf, params)[[1]]
changers = sum(rf_pred==0)/length(rf_pred)
changers = sum(rf_pred==0)/length(rf_pred)
pair_changers = sum(((rf_pred==0)+(mut_change>0.5))==2)/sum(rf_pred==0)
mut_change = NULL
k=1
for(x in 1:length(files)){
#read in files
sample = read.table(files[x])
start = varna_start[x]
#normalize
samp_norm = normalize(sample[1:2,3:ncol(sample)])
#get change at mutation site
for(i in 2:nrow(sample)){
mut = sample[i,2]-sample[2,2]+start
mut_change[k] = samp_norm[1,mut]
k = k+1
}
}
rf = classifyRNA(classes=2)
rf_pred = predict(rf, params)[[1]]
#number of changers
changers = sum(rf_pred==0)/length(rf_pred)
pair_changers = sum(((rf_pred==0)+(mut_change>0.5))==2)/sum(rf_pred==0)
changers
pair_changers
#build classifier set up 3
rf = classifyRNA(classes=3)
rf_pred2 = predict(rf, params)[[1]]
#number of global changers
global = sum(rf_pred2==1)/length(rf_pred2)
pair_global = sum(((rf_pred2==1)+(mut_change>0.5))==2)/sum(rf_pred2==1)
#number of local changers
local = sum(((rf_pred==0)+(rf_pred2!=1))==2)/length(rf_pred)
pair_local = sum(((rf_pred==0)+(rf_pred2!=1)+(mut_change>0.5))==3)/sum(((rf_pred==0)+(rf_pred2!=1))==2)
global
pair_global
local
pair_local
#roc curves
col = 2
rf = classifyRNA(classes=col)
data("mutmap")
data = mutmap
data = data[-which(is.na(data[,col]),arr.ind=T),]
predobj = prediction(rf$votes[,2], data[,col])
perfobj = performance(predobj, 'tpr', 'fpr')
aucobj = performance(predobj, 'auc')
plot(perfobj@x.values[[1]], perfobj@y.values[[1]], lwd=2,
type="l", xaxt="n", yaxt="n", xlab="", ylab="")
axis(side=2, tck=-0.05, at=c(0.2,0.6,1), labels=c("","",""))
axis(side=1, tck=-0.05, at=c(0.2,0.6,1), labels=c("","",""))
points(c(-1,2),c(-1,2), col="red", type="l")
text(0.8, 0.2, paste("AUC: ", format(aucobj@y.values, digits=2), sep=""), cex=1)
library("gplots")
library("ROCR")
setwd("~/Desktop/lab/classify/RMDB_SHP/")
#roc curves
col = 2
rf = classifyRNA(classes=col)
data("mutmap")
data = mutmap
data = data[-which(is.na(data[,col]),arr.ind=T),]
predobj = prediction(rf$votes[,2], data[,col])
perfobj = performance(predobj, 'tpr', 'fpr')
aucobj = performance(predobj, 'auc')
plot(perfobj@x.values[[1]], perfobj@y.values[[1]], lwd=2,
type="l", xaxt="n", yaxt="n", xlab="", ylab="")
axis(side=2, tck=-0.05, at=c(0.2,0.6,1), labels=c("","",""))
axis(side=1, tck=-0.05, at=c(0.2,0.6,1), labels=c("","",""))
points(c(-1,2),c(-1,2), col="red", type="l")
text(0.8, 0.2, paste("AUC: ", format(aucobj@y.values, digits=2), sep=""), cex=1)
17+8
local = sum(((rf_pred==0)+(rf_pred2==1))==2)/length(rf_pred)
local
sum(((rf_pred==0)+(rf_pred2!=1))==2)
(rf_pred==0)
sum((rf_pred==0))
sum((rf_pred2==0))
sum((rf_pred2==1))
sum(((rf_pred==0)+(rf_pred2==1))==2)
sum(rf_pred==0)/length(rf_pred)
rf = classifyRNA(classes=1)
rf_pred = predict(rf, params)[[1]]
rf_pred
#build classifier set up 2
rf = classifyRNA(classes=2)
rf_pred = predict(rf, params)[[1]]
#number of changers
changers = sum(rf_pred==0)/length(rf_pred)
pair_changers = sum(((rf_pred==0)+(mut_change>0.5))==2)/sum(rf_pred==0)
#build classifier set up 3
rf = classifyRNA(classes=3)
rf_pred2 = predict(rf, params)[[1]]
#number of global changers
global = sum(rf_pred2==1)/length(rf_pred2)
pair_global = sum(((rf_pred2==1)+(mut_change>0.5))==2)/sum(rf_pred2==1)
rf = classifyRNA(classes=1)
rf_pred = predict(rf, params)[[1]]
#number of local changers
changers = sum(rf_pred==2)/length(rf_pred)
global = sum(rf_pred==3)/length(rf_pred)
global_changers = sum(((rf_pred==3)+(mut_change>0.5))==2)/sum(rf_pred==3)
global
rf = classifyRNA(classes=2)
rf_pred = predict(rf, params)[[1]]
#number of changers
changers = sum(rf_pred==0)/length(rf_pred)
pair_changers = sum(((rf_pred==0)+(mut_change>0.5))==2)/sum(rf_pred==0)
changers = sum(rf_pred==0)/length(rf_pred)
rf = classifyRNA(classes=3)
rf_pred2 = predict(rf, params)[[1]]
#number of global changers
global = sum(rf_pred2==1)/length(rf_pred2)
pair_global = sum(((rf_pred2==1)+(mut_change>0.5))==2)/sum(rf_pred2==1)
#number of local changers
local = sum(((rf_pred==0)+(rf_pred2!=1))==2)/length(rf_pred)
pair_local = sum(((rf_pred==0)+(rf_pred2!=1)+(mut_change>0.5))==3)/sum(((rf_pred==0)+(rf_pred2!=1))==2)
#install package
setwd("~/Desktop")
library("devtools")
#devtools::install_github("klutometis/roxygen")
library(roxygen2)
#create("classSNitch")
setwd("~/Documents/SVN_dir/classsnitch/pkg/classSNitch")
document()
devtools::use_package("randomForest")
devtools::use_package("dtw")
devtools::use_package("changepoint")
devtools::use_package("gplots")
devtools::use_package("ROCR")
load("~/Desktop/magpat_ex.rda")
load("~/Desktop/shape_ex.rda")
load("~/Desktop/mutmap.rda")
classify_default=mutmap
devtools::use_data(magpat_ex, overwrite=T)
devtools::use_data(shape_ex, overwrite=T)
devtools::use_data(mutmap, overwrite=T)
devtools::use_data(classify_default, internal=T, overwrite=T)
install("~/Documents/SVN_dir/classsnitch/pkg/classSNitch")
devtools::check()
#roc curves
col = 2
rf = classifyRNA(classes=col)
data("mutmap")
data = mutmap
data = data[-which(is.na(data[,col]),arr.ind=T),]
predobj = prediction(rf$votes[,2], data[,col])
perfobj = performance(predobj, 'tpr', 'fpr')
aucobj = performance(predobj, 'auc')
plot(perfobj@x.values[[1]], perfobj@y.values[[1]], lwd=2,
type="l", xaxt="n", yaxt="n", xlab="", ylab="")
axis(side=2, tck=-0.05, at=c(0.2,0.6,1), labels=c("","",""))
axis(side=1, tck=-0.05, at=c(0.2,0.6,1), labels=c("","",""))
points(c(-1,2),c(-1,2), col="red", type="l")
text(0.8, 0.2, paste("AUC: ", format(aucobj@y.values, digits=2), sep=""), cex=1)
#roc curves
col = 3
rf = classifyRNA(classes=col)
data("mutmap")
data = mutmap
data = data[-which(is.na(data[,col]),arr.ind=T),]
predobj = prediction(rf$votes[,2], data[,col])
perfobj = performance(predobj, 'tpr', 'fpr')
aucobj = performance(predobj, 'auc')
plot(perfobj@x.values[[1]], perfobj@y.values[[1]], lwd=2,
type="l", xaxt="n", yaxt="n", xlab="", ylab="")
axis(side=2, tck=-0.05, at=c(0.2,0.6,1), labels=c("","",""))
axis(side=1, tck=-0.05, at=c(0.2,0.6,1), labels=c("","",""))
points(c(-1,2),c(-1,2), col="red", type="l")
text(0.8, 0.2, paste("AUC: ", format(aucobj@y.values, digits=2), sep=""), cex=1)
setwd("~/Desktop/lab/classify/RMDB_SHP/")
library("classSNitch")
library("gplots")
library("ROCR")
#initialize variables
setwd("~/Desktop/final")
files = list.files("~/Desktop/final/")
varna_start=c(0,19,19,0,7,0,9,9,9,0,0,0,15,13,6,6)+1
params = NULL
#get change parameters
for(x in 1:length(files)){
sample = read.table(files[x])
samp = as.matrix(sample[,3:ncol(sample)])
rownames(samp) = paste0(files[x],paste(substr(x, 1, nchar(x)-4), sample[,1], sep="_"))
mut = sample[2:nrow(samp),2]-sample[2,2]+varna_start[x]
params = rbind(params, getChangeParams(samp[2:nrow(samp),], point=mut, window=5, base=samp[1,], trim=5))
}
rf = classifyRNA(classes=2)
rf_pred = predict(rf, params)[[1]]
#number of changers
changers = sum(rf_pred==0)/length(rf_pred)
global = sum(rf_pred==3)/length(rf_pred)
global_changers = sum(((rf_pred==3)+(mut_change>0.5))==2)/sum(rf_pred==3)
#build classifier set up 2
rf = classifyRNA(classes=2)
rf_pred = predict(rf, params)[[1]]
#number of changers
changers = sum(rf_pred==0)/length(rf_pred)
pair_changers = sum(((rf_pred==0)+(mut_change>0.5))==2)/sum(rf_pred==0)
#build classifier set up 3
rf = classifyRNA(classes=3)
rf_pred2 = predict(rf, params)[[1]]
#number of global changers
global = sum(rf_pred2==1)/length(rf_pred2)
pair_global = sum(((rf_pred2==1)+(mut_change>0.5))==2)/sum(rf_pred2==1)
#number of local changers
local = sum(((rf_pred==0)+(rf_pred2!=1))==2)/length(rf_pred)
pair_local = sum(((rf_pred==0)+(rf_pred2!=1)+(mut_change>0.5))==3)/sum(((rf_pred==0)+(rf_pred2!=1))==2)
global
local
pair_changers
pair_local
pair_global
#install package
setwd("~/Desktop")
library("devtools")
#devtools::install_github("klutometis/roxygen")
library(roxygen2)
#create("classSNitch")
setwd("~/Documents/SVN_dir/classsnitch/pkg/classSNitch")
document()
devtools::use_package("randomForest")
devtools::use_package("dtw")
devtools::use_package("changepoint")
devtools::use_package("gplots")
devtools::use_package("ROCR")
load("~/Desktop/magpat_ex.rda")
load("~/Desktop/shape_ex.rda")
load("~/Desktop/mutmap.rda")
classify_default=mutmap
devtools::use_data(magpat_ex, overwrite=T)
devtools::use_data(shape_ex, overwrite=T)
devtools::use_data(mutmap, overwrite=T)
devtools::use_data(classify_default, internal=T, overwrite=T)
install("~/Documents/SVN_dir/classsnitch/pkg/classSNitch")
devtools::check()
setwd("~/Desktop")
library("devtools")
#devtools::install_github("klutometis/roxygen")
library(roxygen2)
#create("classSNitch")
setwd("~/Desktop")
library("devtools")
#devtools::install_github("klutometis/roxygen")
library(roxygen2)
#create("classSNitch")
setwd("~/Documents/SVN_dir/classsnitch/pkg/classSNitch")
